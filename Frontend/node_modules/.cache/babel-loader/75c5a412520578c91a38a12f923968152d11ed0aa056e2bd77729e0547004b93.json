{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksrvisitor\\\\forklift-tracking\\\\Frontend\\\\src\\\\Components\\\\AvailableRides.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Confetti from \"react-confetti\";\nimport { bookRide } from \"../Services/api\";\nimport { io } from \"socket.io-client\";\nimport \"./AvailableRides.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || \"http://localhost:5000\";\nconst AvailableRides = ({\n  user\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [fromLocation, setFromLocation] = useState(\"\");\n  const [toLocation, setToLocation] = useState(\"\");\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [bookingSuccess, setBookingSuccess] = useState(false);\n  const [currentUser, setCurrentUser] = useState(user || null);\n  const [rideStatus, setRideStatus] = useState(\"\");\n  const [rideId, setRideId] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL, {\n      autoConnect: false,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Socket disconnected');\n      setIsConnected(false);\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Socket connection error:', err);\n    });\n    setSocket(newSocket);\n    newSocket.connect();\n    return () => {\n      newSocket.off('connect');\n      newSocket.off('disconnect');\n      newSocket.off('connect_error');\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Handle ride acceptance notifications\n  useEffect(() => {\n    if (!socket || !rideId) return;\n    const handleRideAccepted = ({\n      rideId: acceptedRideId,\n      driverId\n    }) => {\n      console.log('Received rideAccepted event:', acceptedRideId, driverId);\n      if (acceptedRideId === rideId) {\n        setRideStatus(\"accepted\");\n        setShowConfetti(true);\n        setBookingSuccess(true);\n      }\n    };\n    socket.on('rideAccepted', handleRideAccepted);\n    return () => {\n      socket.off('rideAccepted', handleRideAccepted);\n    };\n  }, [socket, rideId]);\n\n  // Handle ride ended notifications\n  useEffect(() => {\n    if (!socket || !rideId) return;\n    const handleRideEnded = ({\n      rideId: endedRideId\n    }) => {\n      if (endedRideId === rideId) {\n        setRideStatus(\"completed\");\n        setTimeout(() => {\n          navigate('/');\n        }, 3000);\n      }\n    };\n    socket.on('rideEnded', handleRideEnded);\n    return () => {\n      socket.off('rideEnded', handleRideEnded);\n    };\n  }, [socket, rideId, navigate]);\n\n  // Rest of your component logic...\n  // [Keep all your existing masterData, location handling, etc.]\n\n  const handleYes = async () => {\n    setShowConfirmation(false);\n    setRideStatus(\"requested\");\n    try {\n      const response = await bookRide(currentUser.id, fromLocation, toLocation, \"Forklift\");\n      if (response.rideId) {\n        setRideId(response.rideId);\n        if (socket) {\n          socket.emit(\"rideRequested\", {\n            rideId: response.rideId,\n            userId: currentUser.id\n          });\n        }\n      }\n    } catch (error) {\n      console.error(\"‚ùå API Error:\", error);\n      setRideStatus(\"failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"available-rides-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `connection-status ${isConnected ? 'connected' : 'disconnected'}`,\n      children: isConnected ? 'üü¢ Connected' : 'üî¥ Disconnected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      numberOfPieces: 400,\n      gravity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableRides, \"3CAdmkEFw7hdwj6taYP+MzgC8eQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AvailableRides;\nexport default AvailableRides;\nvar _c;\n$RefreshReg$(_c, \"AvailableRides\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Confetti","bookRide","io","jsxDEV","_jsxDEV","SOCKET_URL","process","env","REACT_APP_SOCKET_URL","AvailableRides","user","_s","navigate","fromLocation","setFromLocation","toLocation","setToLocation","estimatedTime","setEstimatedTime","showConfirmation","setShowConfirmation","showConfetti","setShowConfetti","bookingSuccess","setBookingSuccess","currentUser","setCurrentUser","rideStatus","setRideStatus","rideId","setRideId","socket","setSocket","isConnected","setIsConnected","newSocket","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","err","error","connect","off","disconnect","handleRideAccepted","acceptedRideId","driverId","handleRideEnded","endedRideId","setTimeout","handleYes","response","id","emit","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","numberOfPieces","gravity","_c","$RefreshReg$"],"sources":["C:/Users/ksrvisitor/forklift-tracking/Frontend/src/Components/AvailableRides.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Confetti from \"react-confetti\";\r\nimport { bookRide } from \"../Services/api\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./AvailableRides.css\";\r\n\r\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || \"http://localhost:5000\";\r\n\r\nconst AvailableRides = ({ user }) => {\r\n  const navigate = useNavigate();\r\n  const [fromLocation, setFromLocation] = useState(\"\");\r\n  const [toLocation, setToLocation] = useState(\"\");\r\n  const [estimatedTime, setEstimatedTime] = useState(\"\");\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [bookingSuccess, setBookingSuccess] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(user || null);\r\n  const [rideStatus, setRideStatus] = useState(\"\");\r\n  const [rideId, setRideId] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n\r\n  // Initialize socket connection\r\n  useEffect(() => {\r\n    const newSocket = io(SOCKET_URL, {\r\n      autoConnect: false,\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket connected');\r\n      setIsConnected(true);\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Socket disconnected');\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connect_error', (err) => {\r\n      console.error('Socket connection error:', err);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n    newSocket.connect();\r\n\r\n    return () => {\r\n      newSocket.off('connect');\r\n      newSocket.off('disconnect');\r\n      newSocket.off('connect_error');\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // Handle ride acceptance notifications\r\n  useEffect(() => {\r\n    if (!socket || !rideId) return;\r\n\r\n    const handleRideAccepted = ({ rideId: acceptedRideId, driverId }) => {\r\n      console.log('Received rideAccepted event:', acceptedRideId, driverId);\r\n      if (acceptedRideId === rideId) {\r\n        setRideStatus(\"accepted\");\r\n        setShowConfetti(true);\r\n        setBookingSuccess(true);\r\n      }\r\n    };\r\n\r\n    socket.on('rideAccepted', handleRideAccepted);\r\n\r\n    return () => {\r\n      socket.off('rideAccepted', handleRideAccepted);\r\n    };\r\n  }, [socket, rideId]);\r\n\r\n  // Handle ride ended notifications\r\n  useEffect(() => {\r\n    if (!socket || !rideId) return;\r\n\r\n    const handleRideEnded = ({ rideId: endedRideId }) => {\r\n      if (endedRideId === rideId) {\r\n        setRideStatus(\"completed\");\r\n        setTimeout(() => {\r\n          navigate('/');\r\n        }, 3000);\r\n      }\r\n    };\r\n\r\n    socket.on('rideEnded', handleRideEnded);\r\n\r\n    return () => {\r\n      socket.off('rideEnded', handleRideEnded);\r\n    };\r\n  }, [socket, rideId, navigate]);\r\n\r\n  // Rest of your component logic...\r\n  // [Keep all your existing masterData, location handling, etc.]\r\n\r\n  const handleYes = async () => {\r\n    setShowConfirmation(false);\r\n    setRideStatus(\"requested\");\r\n\r\n    try {\r\n      const response = await bookRide(\r\n        currentUser.id,\r\n        fromLocation,\r\n        toLocation,\r\n        \"Forklift\"\r\n      );\r\n\r\n      if (response.rideId) {\r\n        setRideId(response.rideId);\r\n        if (socket) {\r\n          socket.emit(\"rideRequested\", { \r\n            rideId: response.rideId,\r\n            userId: currentUser.id \r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"‚ùå API Error:\", error);\r\n      setRideStatus(\"failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"available-rides-container\">\r\n      {/* Connection status indicator */}\r\n      <div className={`connection-status ${isConnected ? 'connected' : 'disconnected'}`}>\r\n        {isConnected ? 'üü¢ Connected' : 'üî¥ Disconnected'}\r\n      </div>\r\n\r\n      {showConfetti && <Confetti numberOfPieces={400} gravity={0.2} />}\r\n      \r\n      {/* Rest of your existing JSX */}\r\n      {/* ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvailableRides;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}