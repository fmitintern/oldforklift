{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksrvisitor\\\\forklift-tracking\\\\Frontend\\\\src\\\\Components\\\\DriverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./DriverDashboard.css\";\nimport { acceptRide, completeRide } from \"../Services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://localhost:5000\";\nconst DriverDashboard = ({\n  driver\n}) => {\n  _s();\n  const [ongoingRide, setOngoingRide] = useState(null);\n  const [newRideRequests, setNewRideRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null); // Store socket instance in state\n\n  // Initialize Socket.IO connection\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL, {\n      autoConnect: true\n    }); // Auto-connect the socket\n    setSocket(newSocket);\n\n    // Cleanup on unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Fetch new ride requests\n  const fetchNewRideRequests = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/drivers/available-rides`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch driver data\");\n      }\n      const data = await response.json();\n      const rides = data.rides.rows || [];\n      console.log(\"rides = \", rides);\n      setNewRideRequests(rides);\n    } catch (error) {\n      console.error(\"❌ Error fetching driver data:\", error);\n    }\n  };\n\n  // Handle accepting a ride\n  const handleAcceptRide = async rideId => {\n    // if (loading) return;\n\n    // setLoading(true);\n    try {\n      const response = await acceptRide(driver.id, rideId);\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\n\n      // Move the ride to \"Ongoing Ride\"\n      const acceptedRide = newRideRequests.find(ride => ride.id === rideId);\n      console.log(\"accRide  = \", acceptedRide);\n      setOngoingRide(acceptedRide);\n      setNewRideRequests(prev => prev.filter(ride => ride.id !== rideId));\n      console.log(\"rideId = \", rideId);\n      // Notify the requester\n      socket.emit(\"rideAccepted\", {\n        rideId\n      }); // Emit rideAccepted event\n    } catch (error) {\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\n      console.error(\"❌ Error accepting ride:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle ending a ride\n  const handleEndRide = async () => {\n    if (!ongoingRide || !socket) return;\n    try {\n      console.log(\"Ongoing Ride Object:\", ongoingRide); // Log the ongoingRide object\n      console.log(\"Ending ride with ID:\", ongoingRide.Id); // Log the Id (not rideId)\n\n      const response = await completeRide(ongoingRide.Id); // Use ongoingRide.Id\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\n\n      // Notify the requester\n      socket.emit(\"rideEnded\", {\n        rideId: ongoingRide.Id\n      }); // Use ongoingRide.Id\n\n      // Clear the ongoing ride and progress\n      setTimeout(() => {\n        setOngoingRide(null);\n        setProgress(0);\n        setRideEndedMessage(\"\");\n        fetchNewRideRequests(); // Fetch new rides after ending the ride\n      }, 2000);\n    } catch (error) {\n      setRideEndedMessage(\"❌ Failed to end ride.\");\n      console.error(\"❌ Error ending ride:\", error);\n    }\n  };\n\n  // Simulate ride progress\n  useEffect(() => {\n    if (ongoingRide) {\n      const interval = setInterval(() => {\n        setProgress(prev => {\n          if (prev >= 100) {\n            clearInterval(interval);\n            return 100;\n          }\n          return prev + 10; // Increment progress by 10% every second\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [ongoingRide]);\n\n  // Fetch new ride requests on mount\n  useEffect(() => {\n    fetchNewRideRequests();\n  }, []);\n\n  // Separate rides into \"Top 3 Closest Rides\" and \"Other Available Rides\"\n  const top3ClosestRides = newRideRequests.slice(0, 3);\n  const otherAvailableRides = newRideRequests.slice(3, 13);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), ongoingRide ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ongoing-ride\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ongoing Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), \" \", ongoingRide.FROM_LOCATION, \" \\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), \" \", ongoingRide.TO_LOCATION]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-indicator\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car-emoji\",\n            style: {\n              left: `${progress}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), showEndRideConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-ride-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to end the ride?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"yes-button\",\n            onClick: handleEndRide,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-button\",\n            onClick: () => setShowEndRideConfirmation(false),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-ride-button\",\n        onClick: () => setShowEndRideConfirmation(true),\n        children: \"End Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), rideEndedMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ride-ended-message\",\n        children: rideEndedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-rides\",\n      children: \"No ongoing ride.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), rideAcceptedMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ride-accepted-message\",\n      children: rideAcceptedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), !ongoingRide && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top 3 Closest Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), top3ClosestRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-rides\",\n        children: \"No closest rides available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rides-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: top3ClosestRides.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.FROM_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.TO_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept-ride\",\n                onClick: () => handleAcceptRide(ride.id),\n                disabled: loading,\n                children: ride\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }, this)]\n          }, ride.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Other Available Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), otherAvailableRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-rides\",\n        children: \"No additional rides available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rides-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: otherAvailableRides.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.FROM_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.TO_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept-ride\",\n                onClick: () => handleAcceptRide(ride.id),\n                disabled: loading,\n                children: loading ? \"Processing...\" : \"Accept Ride\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this)]\n          }, ride.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverDashboard, \"nQGTMXwLeOEzBoWJIrHeZqwnJ/A=\");\n_c = DriverDashboard;\nexport default DriverDashboard;\nvar _c;\n$RefreshReg$(_c, \"DriverDashboard\");","map":{"version":3,"names":["React","useState","useEffect","io","acceptRide","completeRide","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","DriverDashboard","driver","_s","ongoingRide","setOngoingRide","newRideRequests","setNewRideRequests","loading","setLoading","progress","setProgress","showEndRideConfirmation","setShowEndRideConfirmation","rideEndedMessage","setRideEndedMessage","rideAcceptedMessage","setRideAcceptedMessage","socket","setSocket","newSocket","autoConnect","disconnect","fetchNewRideRequests","response","fetch","ok","Error","data","json","rides","rows","console","log","error","handleAcceptRide","rideId","id","acceptedRide","find","ride","prev","filter","emit","handleEndRide","Id","setTimeout","interval","setInterval","clearInterval","top3ClosestRides","slice","otherAvailableRides","className","children","fileName","_jsxFileName","lineNumber","columnNumber","FROM_LOCATION","TO_LOCATION","style","width","left","onClick","length","map","disabled","ID","_c","$RefreshReg$"],"sources":["C:/Users/ksrvisitor/forklift-tracking/Frontend/src/Components/DriverDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./DriverDashboard.css\";\r\nimport { acceptRide, completeRide } from \"../Services/api\";\r\n\r\nconst SOCKET_URL = \"http://localhost:5000\";\r\n\r\nconst DriverDashboard = ({ driver }) => {\r\n  const [ongoingRide, setOngoingRide] = useState(null);\r\n  const [newRideRequests, setNewRideRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\r\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\r\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(null); // Store socket instance in state\r\n\r\n  // Initialize Socket.IO connection\r\n  useEffect(() => {\r\n    const newSocket = io(SOCKET_URL, { autoConnect: true }); // Auto-connect the socket\r\n    setSocket(newSocket);\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // Fetch new ride requests\r\n  const fetchNewRideRequests = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/drivers/available-rides`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch driver data\");\r\n      }\r\n      const data = await response.json();\r\n      const rides = data.rides.rows || [];\r\n\r\n      console.log(\"rides = \" , rides)\r\n      setNewRideRequests(rides);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching driver data:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle accepting a ride\r\n  const handleAcceptRide = async (rideId) => {\r\n    // if (loading) return;\r\n\r\n    // setLoading(true);\r\n    try {\r\n      const response = await acceptRide(driver.id, rideId);\r\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\r\n  \r\n      // Move the ride to \"Ongoing Ride\"\r\n      const acceptedRide = newRideRequests.find((ride) => ride.id === rideId);\r\n      console.log(\"accRide  = \", acceptedRide);\r\n      setOngoingRide(acceptedRide);\r\n      setNewRideRequests((prev) => prev.filter((ride) => ride.id !== rideId));\r\n      console.log(\"rideId = \", rideId)\r\n      // Notify the requester\r\n      socket.emit(\"rideAccepted\", { rideId }); // Emit rideAccepted event\r\n    } catch (error) {\r\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\r\n      console.error(\"❌ Error accepting ride:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Handle ending a ride\r\n  const handleEndRide = async () => {\r\n    if (!ongoingRide || !socket) return;\r\n  \r\n    try {\r\n      console.log(\"Ongoing Ride Object:\", ongoingRide); // Log the ongoingRide object\r\n      console.log(\"Ending ride with ID:\", ongoingRide.Id); // Log the Id (not rideId)\r\n  \r\n      const response = await completeRide(ongoingRide.Id); // Use ongoingRide.Id\r\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\r\n  \r\n      // Notify the requester\r\n      socket.emit(\"rideEnded\", { rideId: ongoingRide.Id }); // Use ongoingRide.Id\r\n  \r\n      // Clear the ongoing ride and progress\r\n      setTimeout(() => {\r\n        setOngoingRide(null);\r\n        setProgress(0);\r\n        setRideEndedMessage(\"\");\r\n        fetchNewRideRequests(); // Fetch new rides after ending the ride\r\n      }, 2000);\r\n    } catch (error) {\r\n      setRideEndedMessage(\"❌ Failed to end ride.\");\r\n      console.error(\"❌ Error ending ride:\", error);\r\n    }\r\n  };\r\n\r\n  // Simulate ride progress\r\n  useEffect(() => {\r\n    if (ongoingRide) {\r\n      const interval = setInterval(() => {\r\n        setProgress((prev) => {\r\n          if (prev >= 100) {\r\n            clearInterval(interval);\r\n            return 100;\r\n          }\r\n          return prev + 10; // Increment progress by 10% every second\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ongoingRide]);\r\n\r\n  // Fetch new ride requests on mount\r\n  useEffect(() => {\r\n    fetchNewRideRequests();\r\n  }, []);\r\n\r\n  // Separate rides into \"Top 3 Closest Rides\" and \"Other Available Rides\"\r\n  const top3ClosestRides = newRideRequests.slice(0, 3);\r\n  const otherAvailableRides = newRideRequests.slice(3, 13);\r\n\r\n  return (\r\n    <div className=\"driver-dashboard\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      {/* Ongoing Ride Section */}\r\n      {ongoingRide ? (\r\n        <div className=\"ongoing-ride\">\r\n          <h3>Ongoing Ride</h3>\r\n          <p>\r\n            <strong>From:</strong> {ongoingRide.FROM_LOCATION} &nbsp;|&nbsp;\r\n            <strong>To:</strong> {ongoingRide.TO_LOCATION}\r\n          </p>\r\n          <div className=\"progress-bar-container\">\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-indicator\"\r\n                style={{ width: `${progress}%` }}\r\n              ></div>\r\n              <div className=\"car-emoji\" style={{ left: `${progress}%` }}>🚗</div>\r\n            </div>\r\n          </div>\r\n          {showEndRideConfirmation ? (\r\n            <div className=\"end-ride-confirmation\">\r\n              <p>Are you sure you want to end the ride?</p>\r\n              <div className=\"confirmation-buttons\">\r\n                <button className=\"yes-button\" onClick={handleEndRide}>\r\n                  Yes\r\n                </button>\r\n                <button\r\n                  className=\"no-button\"\r\n                  onClick={() => setShowEndRideConfirmation(false)}\r\n                >\r\n                  No\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <button\r\n              className=\"end-ride-button\"\r\n              onClick={() => setShowEndRideConfirmation(true)}\r\n            >\r\n              End Ride\r\n            </button>\r\n          )}\r\n          {rideEndedMessage && (\r\n            <p className=\"ride-ended-message\">{rideEndedMessage}</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p className=\"no-rides\">No ongoing ride.</p>\r\n      )}\r\n\r\n      {/* Ride Accepted Message */}\r\n      {rideAcceptedMessage && (\r\n        <p className=\"ride-accepted-message\">{rideAcceptedMessage}</p>\r\n      )}\r\n\r\n      {/* Show rides only if there's no ongoing ride */}\r\n      {!ongoingRide && (\r\n        <>\r\n          {/* Top 3 Closest Rides Section */}\r\n          <h3>Top 3 Closest Rides</h3>\r\n          {top3ClosestRides.length === 0 ? (\r\n            <p className=\"no-rides\">No closest rides available.</p>\r\n          ) : (\r\n            <table className=\"rides-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>From</th>\r\n                  <th>To</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {top3ClosestRides.map((ride) => (\r\n                  <tr key={ride.ID}>\r\n                    <td>{ride.FROM_LOCATION}</td>\r\n                    <td>{ride.TO_LOCATION}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"accept-ride\"\r\n                        onClick={() => handleAcceptRide(ride.id)}\r\n                        disabled={loading}\r\n                      >\r\n                        {ride}\r\n                        {/* {loading ? \"Processing...\" : \"Accept Ride\"} */}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n\r\n          {/* Other Available Rides Section */}\r\n          <h3>Other Available Rides</h3>\r\n          {otherAvailableRides.length === 0 ? (\r\n            <p className=\"no-rides\">No additional rides available.</p>\r\n          ) : (\r\n            <table className=\"rides-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>From</th>\r\n                  <th>To</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {otherAvailableRides.map((ride) => (\r\n                  <tr key={ride.ID}>\r\n                    <td>{ride.FROM_LOCATION}</td>\r\n                    <td>{ride.TO_LOCATION}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"accept-ride\"\r\n                        onClick={() => handleAcceptRide(ride.id)}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? \"Processing...\" : \"Accept Ride\"}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}