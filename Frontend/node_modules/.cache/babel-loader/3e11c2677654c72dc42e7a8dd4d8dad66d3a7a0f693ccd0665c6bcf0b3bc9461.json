{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksrvisitor\\\\forklift-tracking\\\\Frontend\\\\src\\\\Components\\\\DriverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"./DriverDashboard.css\";\nimport { acceptRide, completeRide } from \"../Services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://localhost:5000\";\nconst DriverDashboard = ({\n  driver\n}) => {\n  _s();\n  const [ongoingRide, setOngoingRide] = useState(null);\n  const [newRideRequests, setNewRideRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null); // Store socket instance in state\n\n  // Initialize Socket.IO connection\n  // DriverDashboard.js\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL, {\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Socket connection error:', err);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.off('connect');\n      newSocket.off('connect_error');\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Fetch new ride requests\n  const fetchNewRideRequests = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/drivers/available-rides`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch driver data\");\n      }\n      const data = await response.json();\n      const rides = data.rides.rows || [];\n      console.log(\"rides = \", rides);\n      setNewRideRequests(rides);\n    } catch (error) {\n      console.error(\"❌ Error fetching driver data:\", error);\n    }\n  };\n\n  // Handle accepting a ride\n  const handleAcceptRide = async rideId => {\n    // if (loading) return;\n\n    // setLoading(true);\n    try {\n      const response = await acceptRide(driver.id, rideId);\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\n      // Move the ride to \"Ongoing Ride\"\n      const acceptedRide = newRideRequests.find(ride => ride.ID === rideId);\n      console.log(\"accRide  = \", acceptedRide);\n      setOngoingRide(acceptedRide);\n      setNewRideRequests(prev => prev.filter(ride => ride.ID !== rideId));\n      console.log(\"rideId = \", rideId);\n      // Notify the requester\n      socket.emit(\"rideAccepted\", {\n        rideId\n      }); // Emit rideAccepted event\n    } catch (error) {\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\n      console.error(\"❌ Error accepting ride:\", error);\n    }\n    setLoading(false);\n  };\n\n  // Handle ending a ride\n  const handleEndRide = async () => {\n    if (!ongoingRide || !socket) return;\n    try {\n      console.log(\"Ongoing Ride Object:\", ongoingRide); // Log the ongoingRide object\n      console.log(\"Ending ride with ID:\", ongoingRide.Id); // Log the Id (not rideId)\n\n      const response = await completeRide(ongoingRide.Id); // Use ongoingRide.Id\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\n\n      // Notify the requester\n      socket.emit(\"rideEnded\", {\n        rideId: ongoingRide.Id\n      }); // Use ongoingRide.Id\n\n      // Clear the ongoing ride and progress\n      setTimeout(() => {\n        setOngoingRide(null);\n        setProgress(0);\n        setRideEndedMessage(\"\");\n        fetchNewRideRequests(); // Fetch new rides after ending the ride\n      }, 2000);\n    } catch (error) {\n      setRideEndedMessage(\"❌ Failed to end ride.\");\n      console.error(\"❌ Error ending ride:\", error);\n    }\n  };\n\n  // Simulate ride progress\n  useEffect(() => {\n    if (ongoingRide) {\n      const interval = setInterval(() => {\n        setProgress(prev => {\n          if (prev >= 100) {\n            clearInterval(interval);\n            return 100;\n          }\n          return prev + 10; // Increment progress by 10% every second\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [ongoingRide]);\n\n  // Fetch new ride requests on mount\n  useEffect(() => {\n    fetchNewRideRequests();\n  }, []);\n\n  // Separate rides into \"Top 3 Closest Rides\" and \"Other Available Rides\"\n  const top3ClosestRides = newRideRequests.slice(0, 3);\n  const otherAvailableRides = newRideRequests.slice(3, 13);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), ongoingRide ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ongoing-ride\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ongoing Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), \" \", ongoingRide.FROM_LOCATION, \" \\xA0|\\xA0\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), \" \", ongoingRide.TO_LOCATION]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-indicator\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"car-emoji\",\n            style: {\n              left: `${progress}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), showEndRideConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-ride-confirmation\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to end the ride?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"yes-button\",\n            onClick: handleEndRide,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"no-button\",\n            onClick: () => setShowEndRideConfirmation(false),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-ride-button\",\n        onClick: () => setShowEndRideConfirmation(true),\n        children: \"End Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), rideEndedMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ride-ended-message\",\n        children: rideEndedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-rides\",\n      children: \"No ongoing ride.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), rideAcceptedMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ride-accepted-message\",\n      children: rideAcceptedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), !ongoingRide && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Top 3 Closest Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), top3ClosestRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-rides\",\n        children: \"No closest rides available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rides-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: top3ClosestRides.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.FROM_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.TO_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept-ride\",\n                onClick: () => handleAcceptRide(ride.ID),\n                disabled: loading,\n                children: loading ? \"Processing...\" : \"Accept Ride\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this)]\n          }, ride.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Other Available Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), otherAvailableRides.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-rides\",\n        children: \"No additional rides available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rides-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: otherAvailableRides.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.FROM_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.TO_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept-ride\",\n                onClick: () => handleAcceptRide(ride.id),\n                disabled: loading,\n                children: loading ? \"Processing...\" : \"Accept Ride\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this)]\n          }, ride.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverDashboard, \"nQGTMXwLeOEzBoWJIrHeZqwnJ/A=\");\n_c = DriverDashboard;\nexport default DriverDashboard;\nvar _c;\n$RefreshReg$(_c, \"DriverDashboard\");","map":{"version":3,"names":["React","useState","useEffect","io","acceptRide","completeRide","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","DriverDashboard","driver","_s","ongoingRide","setOngoingRide","newRideRequests","setNewRideRequests","loading","setLoading","progress","setProgress","showEndRideConfirmation","setShowEndRideConfirmation","rideEndedMessage","setRideEndedMessage","rideAcceptedMessage","setRideAcceptedMessage","socket","setSocket","newSocket","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","err","error","off","disconnect","fetchNewRideRequests","response","fetch","ok","Error","data","json","rides","rows","handleAcceptRide","rideId","id","acceptedRide","find","ride","ID","prev","filter","emit","handleEndRide","Id","setTimeout","interval","setInterval","clearInterval","top3ClosestRides","slice","otherAvailableRides","className","children","fileName","_jsxFileName","lineNumber","columnNumber","FROM_LOCATION","TO_LOCATION","style","width","left","onClick","length","map","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ksrvisitor/forklift-tracking/Frontend/src/Components/DriverDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport \"./DriverDashboard.css\";\r\nimport { acceptRide, completeRide } from \"../Services/api\";\r\n\r\nconst SOCKET_URL = \"http://localhost:5000\";\r\n\r\nconst DriverDashboard = ({ driver }) => {\r\n  const [ongoingRide, setOngoingRide] = useState(null);\r\n  const [newRideRequests, setNewRideRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\r\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\r\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(null); // Store socket instance in state\r\n\r\n  // Initialize Socket.IO connection\r\n  // DriverDashboard.js\r\nuseEffect(() => {\r\n  const newSocket = io(SOCKET_URL, {\r\n    autoConnect: true,\r\n    reconnection: true,\r\n    reconnectionAttempts: 5,\r\n    reconnectionDelay: 1000,\r\n  });\r\n\r\n  newSocket.on('connect', () => {\r\n    console.log('Socket connected');\r\n  });\r\n\r\n  newSocket.on('connect_error', (err) => {\r\n    console.error('Socket connection error:', err);\r\n  });\r\n\r\n  setSocket(newSocket);\r\n\r\n  return () => {\r\n    newSocket.off('connect');\r\n    newSocket.off('connect_error');\r\n    newSocket.disconnect();\r\n  };\r\n}, []);\r\n\r\n  // Fetch new ride requests\r\n  const fetchNewRideRequests = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/drivers/available-rides`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch driver data\");\r\n      }\r\n      const data = await response.json();\r\n      const rides = data.rides.rows || [];\r\n\r\n      console.log(\"rides = \" , rides)\r\n      setNewRideRequests(rides);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching driver data:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle accepting a ride\r\n  const handleAcceptRide = async (rideId) => {\r\n    // if (loading) return;\r\n\r\n    // setLoading(true);\r\n    try {\r\n      const response = await acceptRide(driver.id, rideId);\r\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\r\n      // Move the ride to \"Ongoing Ride\"\r\n      const acceptedRide = newRideRequests.find((ride) => ride.ID === rideId);\r\n      console.log(\"accRide  = \", acceptedRide);\r\n      setOngoingRide(acceptedRide);\r\n      setNewRideRequests((prev) => prev.filter((ride) => ride.ID !== rideId));\r\n      console.log(\"rideId = \", rideId)\r\n      // Notify the requester\r\n      socket.emit(\"rideAccepted\", { rideId }); // Emit rideAccepted event\r\n    } catch (error) {\r\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\r\n      console.error(\"❌ Error accepting ride:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Handle ending a ride\r\n  const handleEndRide = async () => {\r\n    if (!ongoingRide || !socket) return;\r\n  \r\n    try {\r\n      console.log(\"Ongoing Ride Object:\", ongoingRide); // Log the ongoingRide object\r\n      console.log(\"Ending ride with ID:\", ongoingRide.Id); // Log the Id (not rideId)\r\n  \r\n      const response = await completeRide(ongoingRide.Id); // Use ongoingRide.Id\r\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\r\n  \r\n      // Notify the requester\r\n      socket.emit(\"rideEnded\", { rideId: ongoingRide.Id }); // Use ongoingRide.Id\r\n  \r\n      // Clear the ongoing ride and progress\r\n      setTimeout(() => {\r\n        setOngoingRide(null);\r\n        setProgress(0);\r\n        setRideEndedMessage(\"\");\r\n        fetchNewRideRequests(); // Fetch new rides after ending the ride\r\n      }, 2000);\r\n    } catch (error) {\r\n      setRideEndedMessage(\"❌ Failed to end ride.\");\r\n      console.error(\"❌ Error ending ride:\", error);\r\n    }\r\n  };\r\n\r\n  // Simulate ride progress\r\n  useEffect(() => {\r\n    if (ongoingRide) {\r\n      const interval = setInterval(() => {\r\n        setProgress((prev) => {\r\n          if (prev >= 100) {\r\n            clearInterval(interval);\r\n            return 100;\r\n          }\r\n          return prev + 10; // Increment progress by 10% every second\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ongoingRide]);\r\n\r\n  // Fetch new ride requests on mount\r\n  useEffect(() => {\r\n    fetchNewRideRequests();\r\n  }, []);\r\n\r\n  // Separate rides into \"Top 3 Closest Rides\" and \"Other Available Rides\"\r\n  const top3ClosestRides = newRideRequests.slice(0, 3);\r\n  const otherAvailableRides = newRideRequests.slice(3, 13);\r\n\r\n  return (\r\n    <div className=\"driver-dashboard\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      {/* Ongoing Ride Section */}\r\n      {ongoingRide ? (\r\n        <div className=\"ongoing-ride\">\r\n          <h3>Ongoing Ride</h3>\r\n          <p>\r\n            <strong>From:</strong> {ongoingRide.FROM_LOCATION} &nbsp;|&nbsp;\r\n            <strong>To:</strong> {ongoingRide.TO_LOCATION}\r\n          </p>\r\n          <div className=\"progress-bar-container\">\r\n            <div className=\"progress-bar\">\r\n              <div\r\n                className=\"progress-indicator\"\r\n                style={{ width: `${progress}%` }}\r\n              ></div>\r\n              <div className=\"car-emoji\" style={{ left: `${progress}%` }}>🚗</div>\r\n            </div>\r\n          </div>\r\n          {showEndRideConfirmation ? (\r\n            <div className=\"end-ride-confirmation\">\r\n              <p>Are you sure you want to end the ride?</p>\r\n              <div className=\"confirmation-buttons\">\r\n                <button className=\"yes-button\" onClick={handleEndRide}>\r\n                  Yes\r\n                </button>\r\n                <button\r\n                  className=\"no-button\"\r\n                  onClick={() => setShowEndRideConfirmation(false)}\r\n                >\r\n                  No\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <button\r\n              className=\"end-ride-button\"\r\n              onClick={() => setShowEndRideConfirmation(true)}\r\n            >\r\n              End Ride\r\n            </button>\r\n          )}\r\n          {rideEndedMessage && (\r\n            <p className=\"ride-ended-message\">{rideEndedMessage}</p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <p className=\"no-rides\">No ongoing ride.</p>\r\n      )}\r\n\r\n      {/* Ride Accepted Message */}\r\n      {rideAcceptedMessage && (\r\n        <p className=\"ride-accepted-message\">{rideAcceptedMessage}</p>\r\n      )}\r\n\r\n      {/* Show rides only if there's no ongoing ride */}\r\n      {!ongoingRide && (\r\n        <>\r\n          {/* Top 3 Closest Rides Section */}\r\n          <h3>Top 3 Closest Rides</h3>\r\n          {top3ClosestRides.length === 0 ? (\r\n            <p className=\"no-rides\">No closest rides available.</p>\r\n          ) : (\r\n            <table className=\"rides-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>From</th>\r\n                  <th>To</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {top3ClosestRides.map((ride) => (\r\n                  <tr key={ride.ID}>\r\n                    <td>{ride.FROM_LOCATION}</td>\r\n                    <td>{ride.TO_LOCATION}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"accept-ride\"\r\n                        onClick={() => handleAcceptRide(ride.ID)}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? \"Processing...\" : \"Accept Ride\"}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n\r\n          {/* Other Available Rides Section */}\r\n          <h3>Other Available Rides</h3>\r\n          {otherAvailableRides.length === 0 ? (\r\n            <p className=\"no-rides\">No additional rides available.</p>\r\n          ) : (\r\n            <table className=\"rides-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>From</th>\r\n                  <th>To</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {otherAvailableRides.map((ride) => (\r\n                  <tr key={ride.ID}>\r\n                    <td>{ride.FROM_LOCATION}</td>\r\n                    <td>{ride.TO_LOCATION}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"accept-ride\"\r\n                        onClick={() => handleAcceptRide(ride.id)}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? \"Processing...\" : \"Accept Ride\"}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAO,uBAAuB;AAC9B,SAASC,UAAU,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACqB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACuB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA;EACFC,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG3B,EAAE,CAACO,UAAU,EAAE;MAC/BqB,WAAW,EAAE,IAAI;MACjBC,YAAY,EAAE,IAAI;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEFJ,SAAS,CAACK,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC,CAAC;IAEFP,SAAS,CAACK,EAAE,CAAC,eAAe,EAAGG,GAAG,IAAK;MACrCF,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAED,GAAG,CAAC;IAChD,CAAC,CAAC;IAEFT,SAAS,CAACC,SAAS,CAAC;IAEpB,OAAO,MAAM;MACXA,SAAS,CAACU,GAAG,CAAC,SAAS,CAAC;MACxBV,SAAS,CAACU,GAAG,CAAC,eAAe,CAAC;MAC9BV,SAAS,CAACW,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEJ;EACA,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,CAAC;MACjF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMC,KAAK,GAAGF,IAAI,CAACE,KAAK,CAACC,IAAI,IAAI,EAAE;MAEnCd,OAAO,CAACC,GAAG,CAAC,UAAU,EAAGY,KAAK,CAAC;MAC/BhC,kBAAkB,CAACgC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;;EAED;EACA,MAAMY,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC;;IAEA;IACA,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMvC,UAAU,CAACQ,MAAM,CAACyC,EAAE,EAAED,MAAM,CAAC;MACpDzB,sBAAsB,CAAC,+BAA+B,CAAC;MACvD;MACA,MAAM2B,YAAY,GAAGtC,eAAe,CAACuC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC;MACvEhB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEiB,YAAY,CAAC;MACxCvC,cAAc,CAACuC,YAAY,CAAC;MAC5BrC,kBAAkB,CAAEyC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAAC,CAAC;MACvEhB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEe,MAAM,CAAC;MAChC;MACAxB,MAAM,CAACgC,IAAI,CAAC,cAAc,EAAE;QAAER;MAAO,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdZ,sBAAsB,CAAC,0BAA0B,CAAC;MAClDS,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;IACApB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAM0C,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC/C,WAAW,IAAI,CAACc,MAAM,EAAE;IAE7B,IAAI;MACFQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEvB,WAAW,CAAC,CAAC,CAAC;MAClDsB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEvB,WAAW,CAACgD,EAAE,CAAC,CAAC,CAAC;;MAErD,MAAMnB,QAAQ,GAAG,MAAMtC,YAAY,CAACS,WAAW,CAACgD,EAAE,CAAC,CAAC,CAAC;MACrDrC,mBAAmB,CAAC,4BAA4B,CAAC;;MAEjD;MACAG,MAAM,CAACgC,IAAI,CAAC,WAAW,EAAE;QAAER,MAAM,EAAEtC,WAAW,CAACgD;MAAG,CAAC,CAAC,CAAC,CAAC;;MAEtD;MACAC,UAAU,CAAC,MAAM;QACfhD,cAAc,CAAC,IAAI,CAAC;QACpBM,WAAW,CAAC,CAAC,CAAC;QACdI,mBAAmB,CAAC,EAAE,CAAC;QACvBiB,oBAAoB,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdd,mBAAmB,CAAC,uBAAuB,CAAC;MAC5CW,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACArC,SAAS,CAAC,MAAM;IACd,IAAIY,WAAW,EAAE;MACf,MAAMkD,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC5C,WAAW,CAAEqC,IAAI,IAAK;UACpB,IAAIA,IAAI,IAAI,GAAG,EAAE;YACfQ,aAAa,CAACF,QAAQ,CAAC;YACvB,OAAO,GAAG;UACZ;UACA,OAAON,IAAI,GAAG,EAAE,CAAC,CAAC;QACpB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAAClD,WAAW,CAAC,CAAC;;EAEjB;EACAZ,SAAS,CAAC,MAAM;IACdwC,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMyB,gBAAgB,GAAGnD,eAAe,CAACoD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACpD,MAAMC,mBAAmB,GAAGrD,eAAe,CAACoD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EAExD,oBACE7D,OAAA;IAAK+D,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BhE,OAAA;MAAAgE,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGxB7D,WAAW,gBACVP,OAAA;MAAK+D,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhE,OAAA;QAAAgE,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBpE,OAAA;QAAAgE,QAAA,gBACEhE,OAAA;UAAAgE,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC7D,WAAW,CAAC8D,aAAa,EAAC,YAClD,eAAArE,OAAA;UAAAgE,QAAA,EAAQ;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC7D,WAAW,CAAC+D,WAAW;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACJpE,OAAA;QAAK+D,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrChE,OAAA;UAAK+D,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BhE,OAAA;YACE+D,SAAS,EAAC,oBAAoB;YAC9BQ,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAG3D,QAAQ;YAAI;UAAE;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACPpE,OAAA;YAAK+D,SAAS,EAAC,WAAW;YAACQ,KAAK,EAAE;cAAEE,IAAI,EAAE,GAAG5D,QAAQ;YAAI,CAAE;YAAAmD,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACLrD,uBAAuB,gBACtBf,OAAA;QAAK+D,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpChE,OAAA;UAAAgE,QAAA,EAAG;QAAsC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7CpE,OAAA;UAAK+D,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnChE,OAAA;YAAQ+D,SAAS,EAAC,YAAY;YAACW,OAAO,EAAEpB,aAAc;YAAAU,QAAA,EAAC;UAEvD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpE,OAAA;YACE+D,SAAS,EAAC,WAAW;YACrBW,OAAO,EAAEA,CAAA,KAAM1D,0BAA0B,CAAC,KAAK,CAAE;YAAAgD,QAAA,EAClD;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENpE,OAAA;QACE+D,SAAS,EAAC,iBAAiB;QAC3BW,OAAO,EAAEA,CAAA,KAAM1D,0BAA0B,CAAC,IAAI,CAAE;QAAAgD,QAAA,EACjD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,EACAnD,gBAAgB,iBACfjB,OAAA;QAAG+D,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAE/C;MAAgB;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACxD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAENpE,OAAA;MAAG+D,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5C,EAGAjD,mBAAmB,iBAClBnB,OAAA;MAAG+D,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAE7C;IAAmB;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC9D,EAGA,CAAC7D,WAAW,iBACXP,OAAA,CAAAE,SAAA;MAAA8D,QAAA,gBAEEhE,OAAA;QAAAgE,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BR,gBAAgB,CAACe,MAAM,KAAK,CAAC,gBAC5B3E,OAAA;QAAG+D,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEvDpE,OAAA;QAAO+D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC5BhE,OAAA;UAAAgE,QAAA,eACEhE,OAAA;YAAAgE,QAAA,gBACEhE,OAAA;cAAAgE,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbpE,OAAA;cAAAgE,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXpE,OAAA;cAAAgE,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpE,OAAA;UAAAgE,QAAA,EACGJ,gBAAgB,CAACgB,GAAG,CAAE3B,IAAI,iBACzBjD,OAAA;YAAAgE,QAAA,gBACEhE,OAAA;cAAAgE,QAAA,EAAKf,IAAI,CAACoB;YAAa;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BpE,OAAA;cAAAgE,QAAA,EAAKf,IAAI,CAACqB;YAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BpE,OAAA;cAAAgE,QAAA,eACEhE,OAAA;gBACE+D,SAAS,EAAC,aAAa;gBACvBW,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAACK,IAAI,CAACC,EAAE,CAAE;gBACzC2B,QAAQ,EAAElE,OAAQ;gBAAAqD,QAAA,EAEjBrD,OAAO,GAAG,eAAe,GAAG;cAAa;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAXEnB,IAAI,CAACC,EAAE;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR,eAGDpE,OAAA;QAAAgE,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BN,mBAAmB,CAACa,MAAM,KAAK,CAAC,gBAC/B3E,OAAA;QAAG+D,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE1DpE,OAAA;QAAO+D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC5BhE,OAAA;UAAAgE,QAAA,eACEhE,OAAA;YAAAgE,QAAA,gBACEhE,OAAA;cAAAgE,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbpE,OAAA;cAAAgE,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACXpE,OAAA;cAAAgE,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpE,OAAA;UAAAgE,QAAA,EACGF,mBAAmB,CAACc,GAAG,CAAE3B,IAAI,iBAC5BjD,OAAA;YAAAgE,QAAA,gBACEhE,OAAA;cAAAgE,QAAA,EAAKf,IAAI,CAACoB;YAAa;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BpE,OAAA;cAAAgE,QAAA,EAAKf,IAAI,CAACqB;YAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BpE,OAAA;cAAAgE,QAAA,eACEhE,OAAA;gBACE+D,SAAS,EAAC,aAAa;gBACvBW,OAAO,EAAEA,CAAA,KAAM9B,gBAAgB,CAACK,IAAI,CAACH,EAAE,CAAE;gBACzC+B,QAAQ,EAAElE,OAAQ;gBAAAqD,QAAA,EAEjBrD,OAAO,GAAG,eAAe,GAAG;cAAa;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAXEnB,IAAI,CAACC,EAAE;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACR;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9D,EAAA,CAnQIF,eAAe;AAAA0E,EAAA,GAAf1E,eAAe;AAqQrB,eAAeA,eAAe;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}