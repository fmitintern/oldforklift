{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksrvisitor\\\\forklift-tracking\\\\Frontend\\\\src\\\\Components\\\\DriverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DriverDashboard.css\";\nimport { acceptRide, completeRide } from \"../Services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://172.20.10.4:5000\";\nconst DriverDashboard = ({\n  driver\n}) => {\n  _s();\n  const [ongoingRide, setOngoingRide] = useState(null);\n  const [newRideRequests, setNewRideRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [connectionStatus, setConnectionStatus] = useState(\"disconnected\");\n  const navigate = useNavigate();\n  const ridesPerPage = 10;\n\n  // Fetch rides from server\n  const fetchNewRideRequests = useCallback(async () => {\n    try {\n      var _data$rides;\n      const response = await fetch(`${SOCKET_URL}/api/drivers/available-rides`);\n      if (!response.ok) throw new Error(\"Failed to fetch driver data\");\n      const data = await response.json();\n      setNewRideRequests(((_data$rides = data.rides) === null || _data$rides === void 0 ? void 0 : _data$rides.rows) || []);\n      setCurrentPage(1);\n    } catch (error) {\n      console.error(\"❌ Error fetching driver data:\", error);\n    }\n  }, []);\n\n  // Socket.IO setup\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL, {\n      autoConnect: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    newSocket.on(\"connect\", () => {\n      console.log(\"✅ Connected to Socket.IO server\");\n      setConnectionStatus(\"connected\");\n      // Get initial rides when connected\n      newSocket.emit(\"getInitialRides\", {\n        driverId: driver === null || driver === void 0 ? void 0 : driver.id\n      }, rides => {\n        setNewRideRequests(rides);\n      });\n    });\n    newSocket.on(\"disconnect\", reason => {\n      console.log(\"❌ Disconnected:\", reason);\n      setConnectionStatus(\"disconnected\");\n    });\n    newSocket.on(\"connect_error\", err => {\n      console.log(\"Connection error:\", err);\n      setConnectionStatus(\"error\");\n    });\n    newSocket.on(\"newRideRequest\", newRide => {\n      console.log(\"🆕 New ride received:\", newRide);\n      setNewRideRequests(prev => {\n        const exists = prev.some(ride => ride.ID === newRide.ID);\n        return exists ? prev : [newRide, ...prev];\n      });\n    });\n    newSocket.on(\"rideAccepted\", ({\n      rideId\n    }) => {\n      if ((ongoingRide === null || ongoingRide === void 0 ? void 0 : ongoingRide.ID) === rideId) {\n        setRideAcceptedMessage(\"Ride confirmed!\");\n        setTimeout(() => setRideAcceptedMessage(\"\"), 3000);\n      }\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [driver === null || driver === void 0 ? void 0 : driver.id]);\n\n  // Initial data fetch\n  useEffect(() => {\n    fetchNewRideRequests();\n  }, [fetchNewRideRequests]);\n\n  // Handle ride acceptance\n  const handleAcceptRide = async rideId => {\n    if (loading || !socket) return;\n    setLoading(true);\n    try {\n      const acceptedRide = newRideRequests.find(ride => ride.ID === rideId);\n      if (!acceptedRide) throw new Error(\"Ride not found\");\n      await acceptRide(rideId, driver.id);\n      setOngoingRide(acceptedRide);\n      setNewRideRequests(prev => prev.filter(ride => ride.ID !== rideId));\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\n      socket.emit(\"rideAccepted\", {\n        rideId,\n        driverId: driver.id\n      });\n    } catch (error) {\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\n      console.error(\"Error accepting ride:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle ride completion\n  const handleEndRide = async () => {\n    if (!ongoingRide || !socket) return;\n    try {\n      const response = await completeRide(ongoingRide.ID);\n      if (!response.success) throw new Error(\"Failed to end ride\");\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\n      socket.emit(\"rideEnded\", {\n        rideId: ongoingRide.ID,\n        driverId: driver.id\n      });\n      setTimeout(() => {\n        setOngoingRide(null);\n        setProgress(0);\n        setRideEndedMessage(\"\");\n        fetchNewRideRequests();\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error ending ride:\", error);\n      setRideEndedMessage(\"❌ Failed to end ride. Please try again.\");\n    }\n  };\n\n  // Ride progress simulation\n  useEffect(() => {\n    if (ongoingRide) {\n      const interval = setInterval(() => {\n        setProgress(prev => prev >= 100 ? 100 : prev + 10);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [ongoingRide]);\n\n  // Pagination logic\n  const top3ClosestRides = newRideRequests.slice(0, 3);\n  const otherAvailableRides = newRideRequests.slice(3);\n  const indexOfLastRide = currentPage * ridesPerPage;\n  const indexOfFirstRide = indexOfLastRide - ridesPerPage;\n  const currentRides = otherAvailableRides.slice(indexOfFirstRide, indexOfLastRide);\n  const totalPages = Math.ceil(otherAvailableRides.length / ridesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Driver Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"driver-info\",\n        children: [\"Welcome, \", driver === null || driver === void 0 ? void 0 : driver.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `connection-status ${connectionStatus}`,\n          children: [\"(\", connectionStatus, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), ongoingRide ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ongoing-ride-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ride-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ongoing Ride\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ride-type\",\n          children: ongoingRide.rideType || 'Regular'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ride-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 16\n          }, this), \" \", ongoingRide.FROM_LOCATION]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 16\n          }, this), \" \", ongoingRide.TO_LOCATION]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-car\",\n            style: {\n              left: `${progress}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pickup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), showEndRideConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to end this ride?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn\",\n            onClick: handleEndRide,\n            children: \"Yes, End Ride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowEndRideConfirmation(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-ride-btn\",\n        onClick: () => setShowEndRideConfirmation(true),\n        children: \"End Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), rideEndedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${rideEndedMessage.includes(\"✅\") ? \"success\" : \"error\"}`,\n        children: rideEndedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-rides-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ongoing ride at the moment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-btn\",\n        onClick: fetchNewRideRequests,\n        children: \"Refresh Available Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), rideAcceptedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message ${rideAcceptedMessage.includes(\"✅\") ? \"success\" : \"error\"}`,\n      children: rideAcceptedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), !ongoingRide && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"available-rides-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Top 3 Closest Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), top3ClosestRides.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"rides-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"From\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"To\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: top3ClosestRides.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: ride.FROM_LOCATION\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ride.TO_LOCATION\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ride.rideType || 'Regular'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"accept-btn\",\n                  onClick: () => handleAcceptRide(ride.ID),\n                  disabled: loading,\n                  children: loading ? 'Processing...' : 'Accept Ride'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this)]\n            }, ride.ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-rides-message\",\n        children: \"No closest rides available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Other Available Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), otherAvailableRides.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"rides-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"From\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: currentRides.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ride.FROM_LOCATION\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ride.TO_LOCATION\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ride.rideType || 'Regular'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"accept-btn\",\n                    onClick: () => handleAcceptRide(ride.ID),\n                    disabled: loading,\n                    children: loading ? 'Processing...' : 'Accept Ride'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this)]\n              }, ride.ID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentPage(p => Math.max(1, p - 1)),\n            disabled: currentPage === 1,\n            className: \"pagination-btn\",\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"page-indicator\",\n            children: [\"Page \", currentPage, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentPage(p => Math.min(totalPages, p + 1)),\n            disabled: currentPage === totalPages,\n            className: \"pagination-btn\",\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-rides-message\",\n        children: \"No additional rides available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverDashboard, \"X2HM7DklPAqGSeArTJIEWo0rm08=\", false, function () {\n  return [useNavigate];\n});\n_c = DriverDashboard;\nexport default DriverDashboard;\nvar _c;\n$RefreshReg$(_c, \"DriverDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","useNavigate","acceptRide","completeRide","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_URL","DriverDashboard","driver","_s","ongoingRide","setOngoingRide","newRideRequests","setNewRideRequests","loading","setLoading","progress","setProgress","showEndRideConfirmation","setShowEndRideConfirmation","rideEndedMessage","setRideEndedMessage","rideAcceptedMessage","setRideAcceptedMessage","socket","setSocket","currentPage","setCurrentPage","connectionStatus","setConnectionStatus","navigate","ridesPerPage","fetchNewRideRequests","_data$rides","response","fetch","ok","Error","data","json","rides","rows","error","console","newSocket","autoConnect","reconnectionAttempts","reconnectionDelay","on","log","emit","driverId","id","reason","err","newRide","prev","exists","some","ride","ID","rideId","setTimeout","disconnect","handleAcceptRide","acceptedRide","find","filter","handleEndRide","success","interval","setInterval","clearInterval","top3ClosestRides","slice","otherAvailableRides","indexOfLastRide","indexOfFirstRide","currentRides","totalPages","Math","ceil","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","rideType","FROM_LOCATION","TO_LOCATION","style","width","left","onClick","includes","map","disabled","p","max","min","_c","$RefreshReg$"],"sources":["C:/Users/ksrvisitor/forklift-tracking/Frontend/src/Components/DriverDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./DriverDashboard.css\";\r\nimport { acceptRide, completeRide } from \"../Services/api\";\r\n\r\nconst SOCKET_URL = \"http://172.20.10.4:5000\";\r\n\r\nconst DriverDashboard = ({ driver }) => {\r\n  const [ongoingRide, setOngoingRide] = useState(null);\r\n  const [newRideRequests, setNewRideRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\r\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\r\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [connectionStatus, setConnectionStatus] = useState(\"disconnected\");\r\n  const navigate = useNavigate();\r\n\r\n  const ridesPerPage = 10;\r\n\r\n  // Fetch rides from server\r\n  const fetchNewRideRequests = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${SOCKET_URL}/api/drivers/available-rides`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch driver data\");\r\n      const data = await response.json();\r\n      setNewRideRequests(data.rides?.rows || []);\r\n      setCurrentPage(1);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching driver data:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Socket.IO setup\r\n  useEffect(() => {\r\n    const newSocket = io(SOCKET_URL, {\r\n      autoConnect: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"✅ Connected to Socket.IO server\");\r\n      setConnectionStatus(\"connected\");\r\n      // Get initial rides when connected\r\n      newSocket.emit(\"getInitialRides\", { driverId: driver?.id }, (rides) => {\r\n        setNewRideRequests(rides);\r\n      });\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", (reason) => {\r\n      console.log(\"❌ Disconnected:\", reason);\r\n      setConnectionStatus(\"disconnected\");\r\n    });\r\n\r\n    newSocket.on(\"connect_error\", (err) => {\r\n      console.log(\"Connection error:\", err);\r\n      setConnectionStatus(\"error\");\r\n    });\r\n\r\n    newSocket.on(\"newRideRequest\", (newRide) => {\r\n      console.log(\"🆕 New ride received:\", newRide);\r\n      setNewRideRequests(prev => {\r\n        const exists = prev.some(ride => ride.ID === newRide.ID);\r\n        return exists ? prev : [newRide, ...prev];\r\n      });\r\n    });\r\n\r\n    newSocket.on(\"rideAccepted\", ({ rideId }) => {\r\n      if (ongoingRide?.ID === rideId) {\r\n        setRideAcceptedMessage(\"Ride confirmed!\");\r\n        setTimeout(() => setRideAcceptedMessage(\"\"), 3000);\r\n      }\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [driver?.id]);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    fetchNewRideRequests();\r\n  }, [fetchNewRideRequests]);\r\n\r\n  // Handle ride acceptance\r\n  const handleAcceptRide = async (rideId) => {\r\n    if (loading || !socket) return;\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const acceptedRide = newRideRequests.find(ride => ride.ID === rideId);\r\n      if (!acceptedRide) throw new Error(\"Ride not found\");\r\n      \r\n      await acceptRide(rideId, driver.id);\r\n      setOngoingRide(acceptedRide);\r\n      setNewRideRequests(prev => prev.filter(ride => ride.ID !== rideId));\r\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\r\n      \r\n      socket.emit(\"rideAccepted\", { \r\n        rideId,\r\n        driverId: driver.id \r\n      });\r\n    } catch (error) {\r\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\r\n      console.error(\"Error accepting ride:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle ride completion\r\n  const handleEndRide = async () => {\r\n    if (!ongoingRide || !socket) return;\r\n    \r\n    try {\r\n      const response = await completeRide(ongoingRide.ID);\r\n      if (!response.success) throw new Error(\"Failed to end ride\");\r\n      \r\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\r\n      socket.emit(\"rideEnded\", { \r\n        rideId: ongoingRide.ID,\r\n        driverId: driver.id \r\n      });\r\n\r\n      setTimeout(() => {\r\n        setOngoingRide(null);\r\n        setProgress(0);\r\n        setRideEndedMessage(\"\");\r\n        fetchNewRideRequests();\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error(\"Error ending ride:\", error);\r\n      setRideEndedMessage(\"❌ Failed to end ride. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Ride progress simulation\r\n  useEffect(() => {\r\n    if (ongoingRide) {\r\n      const interval = setInterval(() => {\r\n        setProgress(prev => (prev >= 100 ? 100 : prev + 10));\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ongoingRide]);\r\n\r\n  // Pagination logic\r\n  const top3ClosestRides = newRideRequests.slice(0, 3);\r\n  const otherAvailableRides = newRideRequests.slice(3);\r\n  const indexOfLastRide = currentPage * ridesPerPage;\r\n  const indexOfFirstRide = indexOfLastRide - ridesPerPage;\r\n  const currentRides = otherAvailableRides.slice(indexOfFirstRide, indexOfLastRide);\r\n  const totalPages = Math.ceil(otherAvailableRides.length / ridesPerPage);\r\n\r\n  return (\r\n    <div className=\"driver-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Driver Dashboard</h2>\r\n        <div className=\"driver-info\">\r\n          Welcome, {driver?.name}\r\n          <span className={`connection-status ${connectionStatus}`}>\r\n            ({connectionStatus})\r\n          </span>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Ongoing Ride Section */}\r\n      {ongoingRide ? (\r\n        <div className=\"ongoing-ride-card\">\r\n          <div className=\"ride-header\">\r\n            <h3>Ongoing Ride</h3>\r\n            <span className=\"ride-type\">\r\n              {ongoingRide.rideType || 'Regular'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"ride-details\">\r\n            <p><strong>From:</strong> {ongoingRide.FROM_LOCATION}</p>\r\n            <p><strong>To:</strong> {ongoingRide.TO_LOCATION}</p>\r\n          </div>\r\n\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\r\n              <div className=\"progress-car\" style={{ left: `${progress}%` }}>🚗</div>\r\n            </div>\r\n            <div className=\"progress-labels\">\r\n              <span>Pickup</span>\r\n              <span>Destination</span>\r\n            </div>\r\n          </div>\r\n\r\n          {showEndRideConfirmation ? (\r\n            <div className=\"confirmation-modal\">\r\n              <p>Are you sure you want to end this ride?</p>\r\n              <div className=\"confirmation-actions\">\r\n                <button className=\"confirm-btn\" onClick={handleEndRide}>\r\n                  Yes, End Ride\r\n                </button>\r\n                <button \r\n                  className=\"cancel-btn\" \r\n                  onClick={() => setShowEndRideConfirmation(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <button \r\n              className=\"end-ride-btn\"\r\n              onClick={() => setShowEndRideConfirmation(true)}\r\n            >\r\n              End Ride\r\n            </button>\r\n          )}\r\n\r\n          {rideEndedMessage && (\r\n            <div className={`status-message ${rideEndedMessage.includes(\"✅\") ? \"success\" : \"error\"}`}>\r\n              {rideEndedMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-rides-card\">\r\n          <p>No ongoing ride at the moment</p>\r\n          <button \r\n            className=\"refresh-btn\"\r\n            onClick={fetchNewRideRequests}\r\n          >\r\n            Refresh Available Rides\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Status Messages */}\r\n      {rideAcceptedMessage && (\r\n        <div className={`status-message ${rideAcceptedMessage.includes(\"✅\") ? \"success\" : \"error\"}`}>\r\n          {rideAcceptedMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* Available Rides Section */}\r\n      {!ongoingRide && (\r\n        <div className=\"available-rides-section\">\r\n          <h3 className=\"section-title\">Top 3 Closest Rides</h3>\r\n          {top3ClosestRides.length > 0 ? (\r\n            <div className=\"table-container\">\r\n              <table className=\"rides-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>From</th>\r\n                    <th>To</th>\r\n                    <th>Type</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {top3ClosestRides.map(ride => (\r\n                    <tr key={ride.ID}>\r\n                      <td>{ride.FROM_LOCATION}</td>\r\n                      <td>{ride.TO_LOCATION}</td>\r\n                      <td>{ride.rideType || 'Regular'}</td>\r\n                      <td>\r\n                        <button\r\n                          className=\"accept-btn\"\r\n                          onClick={() => handleAcceptRide(ride.ID)}\r\n                          disabled={loading}\r\n                        >\r\n                          {loading ? 'Processing...' : 'Accept Ride'}\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-rides-message\">\r\n              No closest rides available\r\n            </div>\r\n          )}\r\n\r\n          <h3 className=\"section-title\">Other Available Rides</h3>\r\n          {otherAvailableRides.length > 0 ? (\r\n            <>\r\n              <div className=\"table-container\">\r\n                <table className=\"rides-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>From</th>\r\n                      <th>To</th>\r\n                      <th>Type</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {currentRides.map(ride => (\r\n                      <tr key={ride.ID}>\r\n                        <td>{ride.FROM_LOCATION}</td>\r\n                        <td>{ride.TO_LOCATION}</td>\r\n                        <td>{ride.rideType || 'Regular'}</td>\r\n                        <td>\r\n                          <button\r\n                            className=\"accept-btn\"\r\n                            onClick={() => handleAcceptRide(ride.ID)}\r\n                            disabled={loading}\r\n                          >\r\n                            {loading ? 'Processing...' : 'Accept Ride'}\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"pagination-controls\">\r\n                <button \r\n                  onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\r\n                  disabled={currentPage === 1}\r\n                  className=\"pagination-btn\"\r\n                >\r\n                  &lt;\r\n                </button>\r\n                <span className=\"page-indicator\">\r\n                  Page {currentPage} of {totalPages}\r\n                </span>\r\n                <button \r\n                  onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"pagination-btn\"\r\n                >\r\n                  &gt;\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-rides-message\">\r\n              No additional rides available\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}