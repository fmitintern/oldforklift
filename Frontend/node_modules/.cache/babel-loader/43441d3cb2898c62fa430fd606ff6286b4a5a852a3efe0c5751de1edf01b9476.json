{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksrvisitor\\\\forklift-tracking\\\\Frontend\\\\src\\\\Components\\\\DriverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DriverDashboard.css\";\nimport { acceptRide, completeRide } from \"../Services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://144.11.1.83:5000\";\nconst DriverDashboard = ({\n  driver\n}) => {\n  _s();\n  const [ongoingRide, setOngoingRide] = useState(null);\n  const [newRideRequests, setNewRideRequests] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const navigate = useNavigate();\n\n  // Initialize Socket.IO connection\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL, {\n      autoConnect: true\n    });\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"✅ Connected to DriverDashboard Socket.IO server\");\n    });\n    newSocket.on(\"disconnect\", () => {\n      console.log(\"❌ Disconnected from DriverDashboard Socket.IO server\");\n    });\n    newSocket.on(\"newRideRequest\", newRide => {\n      console.log(\"🆕 New ride received:\", newRide);\n      setNewRideRequests(prevRides => [newRide, ...prevRides]);\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Fetch new ride requests\n  const fetchNewRideRequests = async () => {\n    try {\n      const response = await fetch(`${SOCKET_URL}/api/drivers/available-rides`);\n      if (!response.ok) throw new Error(\"Failed to fetch driver data\");\n      const data = await response.json();\n      setNewRideRequests(data.rides.rows || []);\n    } catch (error) {\n      console.error(\"❌ Error fetching driver data:\", error);\n    }\n  };\n\n  // Handle accepting a ride\n  const handleAcceptRide = async rideId => {\n    if (loading) return;\n    setLoading(true);\n    try {\n      const acceptedRide = newRideRequests.find(ride => ride.ID === rideId);\n      if (!acceptedRide) throw new Error(\"Ride not found\");\n      await acceptRide(rideId, driver.id);\n      setOngoingRide(acceptedRide);\n      setNewRideRequests(prev => prev.filter(ride => ride.ID !== rideId));\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\n      if (socket) {\n        socket.emit(\"rideAccepted\", {\n          rideId\n        });\n      }\n    } catch (error) {\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\n      console.error(\"❌ Error accepting ride:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle ending a ride\n  const handleEndRide = async () => {\n    if (!ongoingRide || !socket) return;\n    try {\n      await completeRide(ongoingRide.ID);\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\n      socket.emit(\"rideEnded\", {\n        rideId: ongoingRide.ID\n      });\n      setTimeout(() => {\n        setOngoingRide(null);\n        setProgress(0);\n        setRideEndedMessage(\"\");\n        fetchNewRideRequests();\n        navigate(\"/driver\");\n      }, 2000);\n    } catch (error) {\n      setRideEndedMessage(\"❌ Failed to end ride.\");\n      console.error(\"❌ Error ending ride:\", error);\n    }\n  };\n\n  // Simulate ride progress\n  useEffect(() => {\n    if (ongoingRide) {\n      const interval = setInterval(() => {\n        setProgress(prev => prev >= 100 ? 100 : prev + 10);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [ongoingRide]);\n\n  // Fetch new ride requests on mount\n  useEffect(() => {\n    fetchNewRideRequests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Driver Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), driver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"driver-info\",\n        children: [\"Welcome, \", driver.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), ongoingRide ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ongoing-ride-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ride-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ongoing Ride\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `ride-type-badge ${ongoingRide.SPECIAL_TASK ? 'special' : 'regular'}`,\n          children: ongoingRide.SPECIAL_TASK ? 'Special Task' : 'Regular Ride'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ride-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 16\n          }, this), \" \", ongoingRide.FROM_LOCATION]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 16\n          }, this), \" \", ongoingRide.TO_LOCATION]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-car\",\n            style: {\n              left: `${progress}%`\n            },\n            children: \"\\uD83D\\uDE97\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Pickup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), showEndRideConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to end this ride?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-btn\",\n            onClick: handleEndRide,\n            children: \"Yes, End Ride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowEndRideConfirmation(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-ride-btn\",\n        onClick: () => setShowEndRideConfirmation(true),\n        children: \"End Ride\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), rideEndedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message success\",\n        children: rideEndedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-rides-card\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ongoing ride at the moment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), rideAcceptedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message success\",\n      children: rideAcceptedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), !ongoingRide && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"available-rides-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Available Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), newRideRequests.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"rides-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: newRideRequests.map(ride => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.FROM_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ride.TO_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `ride-type-badge ${ride.SPECIAL_TASK ? 'special' : 'regular'}`,\n                children: ride.SPECIAL_TASK ? 'Special Task' : 'Regular Ride'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"accept-btn\",\n                onClick: () => handleAcceptRide(ride.ID),\n                disabled: loading,\n                children: loading ? 'Processing...' : 'Accept Ride'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)]\n          }, ride.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-rides-message\",\n        children: \"No rides available at the moment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverDashboard, \"Q56yqylILqUsdPoFvyEpMx+3bek=\", false, function () {\n  return [useNavigate];\n});\n_c = DriverDashboard;\nexport default DriverDashboard;\nvar _c;\n$RefreshReg$(_c, \"DriverDashboard\");","map":{"version":3,"names":["React","useState","useEffect","io","useNavigate","acceptRide","completeRide","jsxDEV","_jsxDEV","SOCKET_URL","DriverDashboard","driver","_s","ongoingRide","setOngoingRide","newRideRequests","setNewRideRequests","loading","setLoading","progress","setProgress","showEndRideConfirmation","setShowEndRideConfirmation","rideEndedMessage","setRideEndedMessage","rideAcceptedMessage","setRideAcceptedMessage","socket","setSocket","navigate","newSocket","autoConnect","on","console","log","newRide","prevRides","disconnect","fetchNewRideRequests","response","fetch","ok","Error","data","json","rides","rows","error","handleAcceptRide","rideId","acceptedRide","find","ride","ID","id","prev","filter","emit","handleEndRide","setTimeout","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","SPECIAL_TASK","FROM_LOCATION","TO_LOCATION","style","width","left","onClick","length","map","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ksrvisitor/forklift-tracking/Frontend/src/Components/DriverDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./DriverDashboard.css\";\r\nimport { acceptRide, completeRide } from \"../Services/api\";\r\n\r\nconst SOCKET_URL = \"http://144.11.1.83:5000\";\r\n\r\nconst DriverDashboard = ({ driver }) => {\r\n  const [ongoingRide, setOngoingRide] = useState(null);\r\n  const [newRideRequests, setNewRideRequests] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\r\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\r\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Initialize Socket.IO connection\r\n  useEffect(() => {\r\n    const newSocket = io(SOCKET_URL, { autoConnect: true });\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"✅ Connected to DriverDashboard Socket.IO server\");\r\n    });\r\n\r\n    newSocket.on(\"disconnect\", () => {\r\n      console.log(\"❌ Disconnected from DriverDashboard Socket.IO server\");\r\n    });\r\n\r\n    newSocket.on(\"newRideRequest\", (newRide) => {\r\n      console.log(\"🆕 New ride received:\", newRide);\r\n      setNewRideRequests((prevRides) => [newRide, ...prevRides]);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // Fetch new ride requests\r\n  const fetchNewRideRequests = async () => {\r\n    try {\r\n      const response = await fetch(`${SOCKET_URL}/api/drivers/available-rides`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch driver data\");\r\n      const data = await response.json();\r\n      setNewRideRequests(data.rides.rows || []);\r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching driver data:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle accepting a ride\r\n  const handleAcceptRide = async (rideId) => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const acceptedRide = newRideRequests.find((ride) => ride.ID === rideId);\r\n      if (!acceptedRide) throw new Error(\"Ride not found\");\r\n      \r\n      await acceptRide(rideId, driver.id);\r\n      setOngoingRide(acceptedRide);\r\n      setNewRideRequests((prev) => prev.filter((ride) => ride.ID !== rideId));\r\n      setRideAcceptedMessage(\"✅ Ride accepted successfully!\");\r\n      \r\n      if (socket) {\r\n        socket.emit(\"rideAccepted\", { rideId });\r\n      }\r\n    } catch (error) {\r\n      setRideAcceptedMessage(\"❌ Failed to accept ride.\");\r\n      console.error(\"❌ Error accepting ride:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle ending a ride\r\n  const handleEndRide = async () => {\r\n    if (!ongoingRide || !socket) return;\r\n    \r\n    try {\r\n      await completeRide(ongoingRide.ID);\r\n      setRideEndedMessage(\"✅ Ride ended successfully!\");\r\n      socket.emit(\"rideEnded\", { rideId: ongoingRide.ID });\r\n\r\n      setTimeout(() => {\r\n        setOngoingRide(null);\r\n        setProgress(0);\r\n        setRideEndedMessage(\"\");\r\n        fetchNewRideRequests();\r\n        navigate(\"/driver\");\r\n      }, 2000);\r\n    } catch (error) {\r\n      setRideEndedMessage(\"❌ Failed to end ride.\");\r\n      console.error(\"❌ Error ending ride:\", error);\r\n    }\r\n  };\r\n\r\n  // Simulate ride progress\r\n  useEffect(() => {\r\n    if (ongoingRide) {\r\n      const interval = setInterval(() => {\r\n        setProgress((prev) => (prev >= 100 ? 100 : prev + 10));\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ongoingRide]);\r\n\r\n  // Fetch new ride requests on mount\r\n  useEffect(() => {\r\n    fetchNewRideRequests();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"driver-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Driver Dashboard</h2>\r\n        {driver && <div className=\"driver-info\">Welcome, {driver.name}</div>}\r\n      </header>\r\n\r\n      {/* Ongoing Ride Section */}\r\n      {ongoingRide ? (\r\n        <div className=\"ongoing-ride-card\">\r\n          <div className=\"ride-header\">\r\n            <h3>Ongoing Ride</h3>\r\n            <span className={`ride-type-badge ${ongoingRide.SPECIAL_TASK ? 'special' : 'regular'}`}>\r\n              {ongoingRide.SPECIAL_TASK ? 'Special Task' : 'Regular Ride'}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"ride-details\">\r\n            <p><strong>From:</strong> {ongoingRide.FROM_LOCATION}</p>\r\n            <p><strong>To:</strong> {ongoingRide.TO_LOCATION}</p>\r\n          </div>\r\n\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\">\r\n              <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\r\n              <div className=\"progress-car\" style={{ left: `${progress}%` }}>🚗</div>\r\n            </div>\r\n            <div className=\"progress-labels\">\r\n              <span>Pickup</span>\r\n              <span>Destination</span>\r\n            </div>\r\n          </div>\r\n\r\n          {showEndRideConfirmation ? (\r\n            <div className=\"confirmation-modal\">\r\n              <p>Are you sure you want to end this ride?</p>\r\n              <div className=\"confirmation-actions\">\r\n                <button className=\"confirm-btn\" onClick={handleEndRide}>Yes, End Ride</button>\r\n                <button className=\"cancel-btn\" onClick={() => setShowEndRideConfirmation(false)}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <button \r\n              className=\"end-ride-btn\"\r\n              onClick={() => setShowEndRideConfirmation(true)}\r\n            >\r\n              End Ride\r\n            </button>\r\n          )}\r\n\r\n          {rideEndedMessage && (\r\n            <div className=\"status-message success\">\r\n              {rideEndedMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"no-rides-card\">\r\n          <p>No ongoing ride at the moment</p>\r\n        </div>\r\n      )}\r\n\r\n      {rideAcceptedMessage && (\r\n        <div className=\"status-message success\">\r\n          {rideAcceptedMessage}\r\n        </div>\r\n      )}\r\n\r\n      {/* Available Rides Section */}\r\n      {!ongoingRide && (\r\n        <div className=\"available-rides-section\">\r\n          <h3 className=\"section-title\">Available Rides</h3>\r\n          {newRideRequests.length > 0 ? (\r\n            <table className=\"rides-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>From</th>\r\n                  <th>To</th>\r\n                  <th>Type</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {newRideRequests.map((ride) => (\r\n                  <tr key={ride.ID}>\r\n                    <td>{ride.FROM_LOCATION}</td>\r\n                    <td>{ride.TO_LOCATION}</td>\r\n                    <td>\r\n                      <span className={`ride-type-badge ${ride.SPECIAL_TASK ? 'special' : 'regular'}`}>\r\n                        {ride.SPECIAL_TASK ? 'Special Task' : 'Regular Ride'}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"accept-btn\"\r\n                        onClick={() => handleAcceptRide(ride.ID)}\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Processing...' : 'Accept Ride'}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <div className=\"no-rides-message\">\r\n              No rides available at the moment\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}