{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksrvisitor\\\\forklift-tracking\\\\Frontend\\\\src\\\\Components\\\\DriverDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DriverDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = \"http://144.11.1.83:5000\";\nconst DriverDashboard = ({\n  driver\n}) => {\n  _s();\n  const [ongoingRide, setOngoingRide] = useState(null);\n  const [newRideRequests, setNewRideRequests] = useState([]);\n  const [completedRides, setCompletedRides] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [historyLoading, setHistoryLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\n  const [socket, setSocket] = useState(null);\n  const [activeTab, setActiveTab] = useState('available');\n  const navigate = useNavigate();\n  const MAX_RIDES_TO_SHOW = 10;\n  const fetchNewRideRequests = useCallback(async () => {\n    try {\n      var _data$rides;\n      const response = await fetch(`${SOCKET_URL}/api/drivers/available-rides`);\n      if (!response.ok) throw new Error(\"Failed to fetch available rides\");\n      const data = await response.json();\n      setNewRideRequests(((_data$rides = data.rides) === null || _data$rides === void 0 ? void 0 : _data$rides.rows) || []);\n    } catch (error) {\n      console.error(\"Error fetching available rides:\", error);\n    }\n  }, []);\n  const fetchCompletedRides = useCallback(async () => {\n    setHistoryLoading(true);\n    try {\n      const response = await fetch(`${SOCKET_URL}/api/rides/completed-rides/${driver.id}`);\n      if (!response.ok) throw new Error(\"Failed to fetch ride history\");\n      const data = await response.json();\n      setCompletedRides(data.rides || []);\n    } catch (error) {\n      console.error(\"Error fetching ride history:\", error);\n    } finally {\n      setHistoryLoading(false);\n    }\n  }, [driver === null || driver === void 0 ? void 0 : driver.id]);\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL, {\n      autoConnect: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    newSocket.on(\"connect\", () => {\n      newSocket.emit(\"getInitialRides\", {\n        driverId: driver === null || driver === void 0 ? void 0 : driver.id\n      }, rides => {\n        setNewRideRequests(rides);\n      });\n    });\n    newSocket.on(\"newRideRequest\", newRide => {\n      setNewRideRequests(prev => {\n        const exists = prev.some(ride => ride.ID === newRide.ID);\n        return exists ? prev : [newRide, ...prev];\n      });\n    });\n    newSocket.on(\"rideAccepted\", ({\n      rideId\n    }) => {\n      if ((ongoingRide === null || ongoingRide === void 0 ? void 0 : ongoingRide.ID) === rideId) {\n        setRideAcceptedMessage(\"Ride confirmed!\");\n        setTimeout(() => setRideAcceptedMessage(\"\"), 3000);\n      }\n    });\n    newSocket.on(\"rideCompleted\", ({\n      rideId\n    }) => {\n      if ((ongoingRide === null || ongoingRide === void 0 ? void 0 : ongoingRide.ID) === rideId) {\n        fetchCompletedRides();\n      }\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [driver === null || driver === void 0 ? void 0 : driver.id, fetchCompletedRides, ongoingRide === null || ongoingRide === void 0 ? void 0 : ongoingRide.ID]);\n  useEffect(() => {\n    fetchNewRideRequests();\n    if (activeTab === 'history') {\n      fetchCompletedRides();\n    }\n  }, [fetchNewRideRequests, fetchCompletedRides, activeTab]);\n  const handleAcceptRide = async rideId => {\n    if (loading || !socket) return;\n    setLoading(true);\n    try {\n      const response = await fetch(`${SOCKET_URL}/api/tracking/accept-ride`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rideId,\n          driverId: driver.id\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || \"Failed to accept ride\");\n      }\n      const acceptedRide = newRideRequests.find(ride => ride.ID === rideId);\n      if (!acceptedRide) throw new Error(\"Ride not found\");\n      setOngoingRide(acceptedRide);\n      setNewRideRequests(prev => prev.filter(ride => ride.ID !== rideId));\n      setRideAcceptedMessage(\"Ride accepted successfully!\");\n      socket.emit(\"rideAccepted\", {\n        rideId,\n        driverId: driver.id\n      });\n    } catch (error) {\n      setRideAcceptedMessage(\"Failed to accept ride.\");\n      console.error(\"Error accepting ride:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEndRide = async () => {\n    if (!ongoingRide) {\n      setRideEndedMessage(\"No active ride to complete\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await fetch(`${SOCKET_URL}/api/rides/complete-ride`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rideId: ongoingRide.ID\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || \"Failed to end ride\");\n      }\n      const completedRide = {\n        ...ongoingRide,\n        end_time: data.ride.end_time,\n        status: 'completed'\n      };\n      setCompletedRides(prev => [completedRide, ...prev]);\n      setRideEndedMessage(\"Ride completed successfully!\");\n      if (socket) {\n        socket.emit(\"rideCompleted\", {\n          rideId: ongoingRide.ID,\n          driverId: driver.id\n        });\n      }\n      setTimeout(() => {\n        setOngoingRide(null);\n        setProgress(0);\n        setRideEndedMessage(\"\");\n        setActiveTab('history');\n        fetchCompletedRides();\n      }, 2000);\n    } catch (error) {\n      console.error('Error in handleEndRide:', error);\n      setRideEndedMessage(error.message || \"Failed to complete ride. Please try again.\");\n    } finally {\n      setLoading(false);\n      setShowEndRideConfirmation(false);\n    }\n  };\n  useEffect(() => {\n    if (ongoingRide) {\n      const interval = setInterval(() => {\n        setProgress(prev => prev >= 100 ? 100 : prev + 10);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [ongoingRide]);\n  const availableRidesToShow = newRideRequests.slice(0, MAX_RIDES_TO_SHOW);\n  const completedRidesToShow = completedRides.slice(0, MAX_RIDES_TO_SHOW);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", driver === null || driver === void 0 ? void 0 : driver.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'available' ? 'active' : ''}`,\n          onClick: () => setActiveTab('available'),\n          children: \"Available Rides\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'history' ? 'active' : ''}`,\n          onClick: () => setActiveTab('history'),\n          children: \"Ride History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), ongoingRide && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ongoing-ride-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ongoing-ride-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ride-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Current Ride in Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ride-type-badge\",\n            children: ongoingRide.rideType || 'Regular'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ride-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ride-detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: ongoingRide.FROM_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ride-detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: ongoingRide.TO_LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-labels\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pickup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-car\",\n              style: {\n                left: `${progress}%`\n              },\n              children: \"\\uD83D\\uDE97\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), showEndRideConfirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"confirmation-modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Confirm ride completion?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"confirmation-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-btn\",\n              onClick: handleEndRide,\n              disabled: loading,\n              children: loading ? 'Completing...' : 'Complete Ride'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => setShowEndRideConfirmation(false),\n              disabled: loading,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-ride-btn\",\n          onClick: () => setShowEndRideConfirmation(true),\n          disabled: loading,\n          children: \"Complete Ride\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }, this), rideEndedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-message ${rideEndedMessage.includes(\"success\") ? \"success\" : \"error\"}`,\n          children: rideEndedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), rideAcceptedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message ${rideAcceptedMessage.includes(\"success\") ? \"success\" : \"error\"}`,\n      children: rideAcceptedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), activeTab === 'available' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"available-rides-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Available Rides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), availableRidesToShow.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-scroll-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"rides-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pickup\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Destination\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: availableRidesToShow.map(ride => {\n                var _ride$rideType;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ride.FROM_LOCATION\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ride.TO_LOCATION\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `ride-type ${((_ride$rideType = ride.rideType) === null || _ride$rideType === void 0 ? void 0 : _ride$rideType.toLowerCase()) || 'regular'}`,\n                      children: ride.rideType || 'Regular'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accept-btn\",\n                      onClick: () => handleAcceptRide(ride.ID),\n                      disabled: loading,\n                      children: loading ? 'Processing...' : 'Accept'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this)]\n                }, ride.ID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-rides-message\",\n        children: \"Currently no rides available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Your Ride History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), historyLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: \"Loading your ride history...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }, this) : completedRidesToShow.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-scroll-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"rides-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"From\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: completedRidesToShow.map(ride => {\n                var _ride$rideType2;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: new Date(ride.end_time || ride.created_at).toLocaleString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ride.FROM_LOCATION\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: ride.TO_LOCATION\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `ride-type ${((_ride$rideType2 = ride.rideType) === null || _ride$rideType2 === void 0 ? void 0 : _ride$rideType2.toLowerCase()) || 'regular'}`,\n                      children: ride.rideType || 'Regular'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"status-badge completed\",\n                      children: \"Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 25\n                  }, this)]\n                }, ride.ID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-rides-message\",\n        children: \"You haven't completed any rides yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverDashboard, \"aZGhGk/m8Egg3jWEMjMgBjE9lC4=\", false, function () {\n  return [useNavigate];\n});\n_c = DriverDashboard;\nexport default DriverDashboard;\nvar _c;\n$RefreshReg$(_c, \"DriverDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","useNavigate","jsxDEV","_jsxDEV","SOCKET_URL","DriverDashboard","driver","_s","ongoingRide","setOngoingRide","newRideRequests","setNewRideRequests","completedRides","setCompletedRides","loading","setLoading","historyLoading","setHistoryLoading","progress","setProgress","showEndRideConfirmation","setShowEndRideConfirmation","rideEndedMessage","setRideEndedMessage","rideAcceptedMessage","setRideAcceptedMessage","socket","setSocket","activeTab","setActiveTab","navigate","MAX_RIDES_TO_SHOW","fetchNewRideRequests","_data$rides","response","fetch","ok","Error","data","json","rides","rows","error","console","fetchCompletedRides","id","newSocket","autoConnect","reconnectionAttempts","reconnectionDelay","on","emit","driverId","newRide","prev","exists","some","ride","ID","rideId","setTimeout","disconnect","handleAcceptRide","method","headers","body","JSON","stringify","success","acceptedRide","find","filter","handleEndRide","completedRide","end_time","status","message","interval","setInterval","clearInterval","availableRidesToShow","slice","completedRidesToShow","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rideType","FROM_LOCATION","TO_LOCATION","style","width","left","disabled","includes","length","map","_ride$rideType","toLowerCase","_ride$rideType2","Date","created_at","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/ksrvisitor/forklift-tracking/Frontend/src/Components/DriverDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./DriverDashboard.css\";\r\n\r\nconst SOCKET_URL = \"http://144.11.1.83:5000\";\r\n\r\nconst DriverDashboard = ({ driver }) => {\r\n  const [ongoingRide, setOngoingRide] = useState(null);\r\n  const [newRideRequests, setNewRideRequests] = useState([]);\r\n  const [completedRides, setCompletedRides] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [historyLoading, setHistoryLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [showEndRideConfirmation, setShowEndRideConfirmation] = useState(false);\r\n  const [rideEndedMessage, setRideEndedMessage] = useState(\"\");\r\n  const [rideAcceptedMessage, setRideAcceptedMessage] = useState(\"\");\r\n  const [socket, setSocket] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('available');\r\n  const navigate = useNavigate();\r\n\r\n  const MAX_RIDES_TO_SHOW = 10;\r\n\r\n  const fetchNewRideRequests = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${SOCKET_URL}/api/drivers/available-rides`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch available rides\");\r\n      const data = await response.json();\r\n      setNewRideRequests(data.rides?.rows || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching available rides:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchCompletedRides = useCallback(async () => {\r\n    setHistoryLoading(true);\r\n    try {\r\n      const response = await fetch(`${SOCKET_URL}/api/rides/completed-rides/${driver.id}`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch ride history\");\r\n      const data = await response.json();\r\n      setCompletedRides(data.rides || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching ride history:\", error);\r\n    } finally {\r\n      setHistoryLoading(false);\r\n    }\r\n  }, [driver?.id]);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(SOCKET_URL, {\r\n      autoConnect: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n    });\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      newSocket.emit(\"getInitialRides\", { driverId: driver?.id }, (rides) => {\r\n        setNewRideRequests(rides);\r\n      });\r\n    });\r\n\r\n    newSocket.on(\"newRideRequest\", (newRide) => {\r\n      setNewRideRequests(prev => {\r\n        const exists = prev.some(ride => ride.ID === newRide.ID);\r\n        return exists ? prev : [newRide, ...prev];\r\n      });\r\n    });\r\n\r\n    newSocket.on(\"rideAccepted\", ({ rideId }) => {\r\n      if (ongoingRide?.ID === rideId) {\r\n        setRideAcceptedMessage(\"Ride confirmed!\");\r\n        setTimeout(() => setRideAcceptedMessage(\"\"), 3000);\r\n      }\r\n    });\r\n\r\n    newSocket.on(\"rideCompleted\", ({ rideId }) => {\r\n      if (ongoingRide?.ID === rideId) {\r\n        fetchCompletedRides();\r\n      }\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [driver?.id, fetchCompletedRides, ongoingRide?.ID]);\r\n\r\n  useEffect(() => {\r\n    fetchNewRideRequests();\r\n    if (activeTab === 'history') {\r\n      fetchCompletedRides();\r\n    }\r\n  }, [fetchNewRideRequests, fetchCompletedRides, activeTab]);\r\n\r\n  const handleAcceptRide = async (rideId) => {\r\n    if (loading || !socket) return;\r\n    setLoading(true);\r\n    \r\n    try {\r\nconst response = await fetch(`${SOCKET_URL}/api/tracking/accept-ride`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          rideId,\r\n          driverId: driver.id\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.error || \"Failed to accept ride\");\r\n      }\r\n\r\n      const acceptedRide = newRideRequests.find(ride => ride.ID === rideId);\r\n      if (!acceptedRide) throw new Error(\"Ride not found\");\r\n      \r\n      setOngoingRide(acceptedRide);\r\n      setNewRideRequests(prev => prev.filter(ride => ride.ID !== rideId));\r\n      setRideAcceptedMessage(\"Ride accepted successfully!\");\r\n      \r\n      socket.emit(\"rideAccepted\", { \r\n        rideId,\r\n        driverId: driver.id \r\n      });\r\n    } catch (error) {\r\n      setRideAcceptedMessage(\"Failed to accept ride.\");\r\n      console.error(\"Error accepting ride:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEndRide = async () => {\r\n    if (!ongoingRide) {\r\n      setRideEndedMessage(\"No active ride to complete\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      const response = await fetch(`${SOCKET_URL}/api/rides/complete-ride`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          rideId: ongoingRide.ID\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (!data.success) {\r\n        throw new Error(data.error || \"Failed to end ride\");\r\n      }\r\n      \r\n      const completedRide = {\r\n        ...ongoingRide,\r\n        end_time: data.ride.end_time,\r\n        status: 'completed'\r\n      };\r\n      \r\n      setCompletedRides(prev => [completedRide, ...prev]);\r\n      setRideEndedMessage(\"Ride completed successfully!\");\r\n      \r\n      if (socket) {\r\n        socket.emit(\"rideCompleted\", { \r\n          rideId: ongoingRide.ID,\r\n          driverId: driver.id \r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setOngoingRide(null);\r\n        setProgress(0);\r\n        setRideEndedMessage(\"\");\r\n        setActiveTab('history');\r\n        fetchCompletedRides();\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.error('Error in handleEndRide:', error);\r\n      setRideEndedMessage(error.message || \"Failed to complete ride. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n      setShowEndRideConfirmation(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ongoingRide) {\r\n      const interval = setInterval(() => {\r\n        setProgress(prev => (prev >= 100 ? 100 : prev + 10));\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [ongoingRide]);\r\n\r\n  const availableRidesToShow = newRideRequests.slice(0, MAX_RIDES_TO_SHOW);\r\n  const completedRidesToShow = completedRides.slice(0, MAX_RIDES_TO_SHOW);\r\n\r\n  return (\r\n    <div className=\"driver-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h2>Welcome, {driver?.name}</h2>\r\n        <div className=\"dashboard-tabs\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'available' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('available')}\r\n          >\r\n            Available Rides\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'history' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('history')}\r\n          >\r\n            Ride History\r\n          </button>\r\n        </div>\r\n      </header>\r\n\r\n      {ongoingRide && (\r\n        <div className=\"ongoing-ride-container\">\r\n          <div className=\"ongoing-ride-card\">\r\n            <div className=\"ride-header\">\r\n              <h3>Current Ride in Progress</h3>\r\n              <span className=\"ride-type-badge\">\r\n                {ongoingRide.rideType || 'Regular'}\r\n              </span>\r\n            </div>\r\n            \r\n            <div className=\"ride-details\">\r\n              <div className=\"ride-detail-item\">\r\n                <span className=\"detail-label\">From:</span>\r\n                <span className=\"detail-value\">{ongoingRide.FROM_LOCATION}</span>\r\n              </div>\r\n              <div className=\"ride-detail-item\">\r\n                <span className=\"detail-label\">To:</span>\r\n                <span className=\"detail-value\">{ongoingRide.TO_LOCATION}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"progress-container\">\r\n              <div className=\"progress-labels\">\r\n                <span>Pickup</span>\r\n                <span>Destination</span>\r\n              </div>\r\n              <div className=\"progress-bar\">\r\n                <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\r\n                <div className=\"progress-car\" style={{ left: `${progress}%` }}>🚗</div>\r\n              </div>\r\n            </div>\r\n\r\n            {showEndRideConfirmation ? (\r\n              <div className=\"confirmation-modal\">\r\n                <p>Confirm ride completion?</p>\r\n                <div className=\"confirmation-actions\">\r\n                  <button className=\"confirm-btn\" onClick={handleEndRide} disabled={loading}>\r\n                    {loading ? 'Completing...' : 'Complete Ride'}\r\n                  </button>\r\n                  <button \r\n                    className=\"cancel-btn\" \r\n                    onClick={() => setShowEndRideConfirmation(false)}\r\n                    disabled={loading}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <button \r\n                className=\"end-ride-btn\"\r\n                onClick={() => setShowEndRideConfirmation(true)}\r\n                disabled={loading}\r\n              >\r\n                Complete Ride\r\n              </button>\r\n            )}\r\n\r\n            {rideEndedMessage && (\r\n              <div className={`status-message ${rideEndedMessage.includes(\"success\") ? \"success\" : \"error\"}`}>\r\n                {rideEndedMessage}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {rideAcceptedMessage && (\r\n        <div className={`status-message ${rideAcceptedMessage.includes(\"success\") ? \"success\" : \"error\"}`}>\r\n          {rideAcceptedMessage}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'available' ? (\r\n        <div className=\"available-rides-section\">\r\n          <h3 className=\"section-title\">Available Rides</h3>\r\n          {availableRidesToShow.length > 0 ? (\r\n            <div className=\"table-container\">\r\n              <div className=\"table-scroll-wrapper\">\r\n                <table className=\"rides-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Pickup</th>\r\n                      <th>Destination</th>\r\n                      <th>Type</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {availableRidesToShow.map(ride => (\r\n                      <tr key={ride.ID}>\r\n                        <td>{ride.FROM_LOCATION}</td>\r\n                        <td>{ride.TO_LOCATION}</td>\r\n                        <td>\r\n                          <span className={`ride-type ${ride.rideType?.toLowerCase() || 'regular'}`}>\r\n                            {ride.rideType || 'Regular'}\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <button\r\n                            className=\"accept-btn\"\r\n                            onClick={() => handleAcceptRide(ride.ID)}\r\n                            disabled={loading}\r\n                          >\r\n                            {loading ? 'Processing...' : 'Accept'}\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-rides-message\">\r\n              Currently no rides available\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"history-section\">\r\n          <h3 className=\"section-title\">Your Ride History</h3>\r\n          {historyLoading ? (\r\n            <div className=\"loading-message\">Loading your ride history...</div>\r\n          ) : completedRidesToShow.length > 0 ? (\r\n            <div className=\"table-container\">\r\n              <div className=\"table-scroll-wrapper\">\r\n                <table className=\"rides-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Date</th>\r\n                      <th>From</th>\r\n                      <th>To</th>\r\n                      <th>Type</th>\r\n                      <th>Status</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {completedRidesToShow.map(ride => (\r\n                      <tr key={ride.ID}>\r\n                        <td>{new Date(ride.end_time || ride.created_at).toLocaleString()}</td>\r\n                        <td>{ride.FROM_LOCATION}</td>\r\n                        <td>{ride.TO_LOCATION}</td>\r\n                        <td>\r\n                          <span className={`ride-type ${ride.rideType?.toLowerCase() || 'regular'}`}>\r\n                            {ride.rideType || 'Regular'}\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <span className=\"status-badge completed\">Completed</span>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-rides-message\">\r\n              You haven't completed any rides yet\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DriverDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}